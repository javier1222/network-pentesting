#library 
import subprocess
import optparse
import re 


#Parameterized arguments
def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i","--interface" , dest ="interface", help="the interface a the you want change mac")
    parser.add_option("-m","--mac", dest ="new_mac", help="New direction mac")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("[-] Please indicate of interface, use --help for more information")
    elif not options.new_mac:    
        parser.error("[-] Please indicate of the new mac address, use --help for more information")
    return options

#change mac
def change_mac (interface, new_mac):
    print("[+] changing the mac address the interface  "+ interface +"  to  " + new_mac)
    
    subprocess.call(["ifconfig", interface, "down"])
    subprocess.call(["ifconfig", interface, "hw", "ether", new_mac])
    subprocess.call(["ifconfig", interface, "up"])

#print current mac
def get_current_mac(interface):
     ifconfig_results = subprocess.check_output(["ifconfig", interface])
     mac_addres_search_result =  re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w",ifconfig_results) 
     if mac_addres_search_result:
         return mac_addres_search_result.group(0)
     else:
         print("[-] Could not read of address direction MAC")
    

#call the functions 
options = get_arguments()
current_mac = get_current_mac(options.interface)
print("Current MAC = "+ str(current_mac))
current_mac = get_current_mac(options.interface)
print("Current MAC = "+ str(current_mac))
change_mac(options.interface,options.new_mac) 
current_mac = get_current_mac(options.interface)

if current_mac == options.new_mac:
    print("[+] The Mac changed correctly "+ current_mac)
else:
    print("[-] The MAC address no could it changed")

